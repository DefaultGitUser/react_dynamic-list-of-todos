{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","React","memo","todos","selectTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","handleQueryChange","filterBy","handleFilterChange","value","onChange","e","target","ALL","ACTIVE","COMPLETED","placeholder","trimStart","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userId","useState","isLoading","setIsLoading","user","setUser","finally","href","email","name","App","setTodos","setQuery","setFilterBy","setSelectedTodo","useCallback","handleSelectTodo","useEffect","visibleTodos","useMemo","todoList","queryString","filter","result","toLowerCase","includes","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cac67efe.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todo: Todo | null) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              {\n                'has-background-info-light': !!((selectedTodo\n                  && selectedTodo.id === todo.id)),\n              },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              { todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  {selectedTodo\n                  && selectedTodo.id === todo.id\n                    ? (<i className=\"far fa-eye-slash\" />)\n                    : (<i className=\"far fa-eye\" />)}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string\n  filterBy: string\n  handleQueryChange: (v:string) => void;\n  handleFilterChange: (v:Filter) => void;\n};\n\nexport const TodoFilter:React.FC<Props> = React.memo(\n  ({\n    query,\n    handleQueryChange,\n    filterBy,\n    handleFilterChange,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={filterBy}\n              onChange={e => handleFilterChange(e.target.value as Filter)}\n            >\n              <option value={Filter.ALL}>All</option>\n              <option value={Filter.ACTIVE}>Active</option>\n              <option value={Filter.COMPLETED}>Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            value={query}\n            className=\"input\"\n            placeholder=\"Search...\"\n            onChange={(e) => handleQueryChange(e.target.value.trimStart())}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => handleQueryChange('')}\n              />\n            </span>\n          )}\n\n        </p>\n      </form>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\n\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  selectTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, selectTodo }) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [user, setUser] = useState<User | null>(null);\n\n  getUser(selectedTodo.userId).then(setUser).finally(() => {\n    setIsLoading(false);\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst getVisibleTodos = (\n  todoList: Todo[],\n  queryString: string,\n  filter: string,\n) => {\n  let result = [...todoList];\n\n  if (queryString) {\n    result = result.filter(todo => {\n      return todo.title\n        .toLowerCase()\n        .includes(queryString.toLowerCase());\n    });\n  }\n\n  switch (filter) {\n    case Filter.ALL:\n      break;\n    case Filter.ACTIVE:\n      result = result.filter(todo => todo.completed === false);\n      break;\n    case Filter.COMPLETED:\n      result = result.filter(todo => todo.completed === true);\n      break;\n    default:\n      break;\n  }\n\n  return result;\n};\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.ALL);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handleQueryChange = useCallback((value: string) => {\n    setQuery(value);\n  }, []);\n\n  const handleFilterChange = (value: Filter) => {\n    setFilterBy(value);\n  };\n\n  const handleSelectTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(\n    () => getVisibleTodos(todos, query, filterBy),\n    [todos, query, filterBy],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterBy={filterBy}\n                handleQueryChange={handleQueryChange}\n                handleFilterChange={handleFilterChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={handleSelectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal selectedTodo={selectedTodo} selectTodo={handleSelectTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}